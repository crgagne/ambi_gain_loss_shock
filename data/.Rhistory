(12*1+12*1+12*1.7+12*2.7+10*1.3+30*1)/(12+12+12+12+10+30)
8/28
23*0.2857143
10*0,847637211
10*0.847637211
p.adjust(c(0.7, 0.3, 0.001, 0.001, 0.001), method="bonferroni")
sqrt(1)
sqrt(0.4)
0.63*0.63
sqrt(0.8)
13/52
12/50
path="D:"
file  <-  read.delim("input_file_piloting.txt", header=F, sep=",", dec=".")
path="D:/"
file  <-  read.delim("input_file_piloting.txt", header=F, sep=",", dec=".")
5/20
60*20
1200*5
6000/60
12-9
10/6
6/10
1000-34
264.31 - 16.4
278.03+253.87
278.03-24.16
253.87-21.9
231.97-48.71
183.26+107.2
13/50
25/50
18/50
32/50
(1+0.5625+0.2857)/3
(0.8+0.62+0.57)/3
(0.833333+1.000000+0.960000)/3
(1+0.66+1)/3
3/25
9/16
3/14
4/14
(1*12+2.7*12+1*12+1.3*12+1.3*10)/5
(1*12+2.7*12+1*12+1.3*12+1.3*10)/58
58+16
(1*12+2.7*12+1*12+1.3*12+1.3*10)/74
(1*12+2.7*12+1*12+1.3*12+1.3*10)/58
(1*12+2.7*12+1*12+1.3*12+1.3*10+1*30)/88
#need gdata package for reorder function
source('~/.active-rstudio-document')
View(dataSet)
View(dataSet)
ANOVA <- ezANOVA(data = dataSet, dv = gain, wid = MID, within = .(parameter, ambiguity))
ezDesign(dataSet)
View(dataSet)
View(dataSet)
str(dataSet)
ANOVA <- ezANOVA(data = dataSet, dv = gain, wid = MID, within = .(parameter, ambiguity), na.rm=T)
ANOVA <- ezANOVA(data = dataSet, dv = gain, wid = MID, within = .(parameter, ambiguity))
ezANOVA(data = dataSet, dv = gain, wid = MID, within = .(parameter, ambiguity))
is.na(dataSet)
complete.cases(dataSet)
View(dataSet)
dataSet[!complete.cases(dataSet),]
ezANOVA(data = dataSet, dv = gain, wid = MID, within = .(parameter, ambiguity))
ezDesign(dataSet$gain)
ezANOVA(data = dataSet, dv = loss, wid = MID, within = .(parameter, ambiguity))
ezANOVA(data = dataSet, dv = shock, wid = MID, within = .(parameter, ambiguity))
ezANOVA(data = dataSet, dv = shock, wid = MID, within = .(parameter, ambiguity), type=3)
temp = as.data.frame(dataSet(dataSet$MID))
temp = as.data.frame(table(dataSet$MID))
temp
#### load requiered libraries ####
#load plyr
library(plyr)
#need car package for recode function
library(car)
#load R.utils
library(R.utils)
#need gdata package for reorder function
library(gdata)
#package for plotting
library(ggplot2)
#needed for unit
library(gridExtra)
#load ez package
library(ez)
#load reshape
library(reshape)
#load reshape2 for dcast
library(reshape2)
#load (pastecs)
library(pastecs)
#load dplyr
library(dplyr)
#load QuantPsyc for standardized regression coefficients
library(QuantPsyc)
#load moments for skewness and kurtosis
library(moments)
#needed for bootstrapping
library(boot)
#needed for GLMM
library(glmm)
library(lme4)
##### DATA COLLECTION ####
#save path to main directory
path="C:/Users/Hanna/ambi_gain_loss_shock/data"
#change working directory to data directory
setwd(path)
#read in excel file and create data set
dataSet  <-  read.csv("triplet.csv", header=T, sep=",", dec=".")
View(dataSet)
dataSet <- dataSet[!parameter = 'ambiguityLevel',]
dataSet <- dataSet[!parameter == 'ambiguityLevel',]
dataSet <- dataSet[!dataSet$parameter == 'ambiguityLevel',]
ezANOVA(data = dataSet, dv = shock, wid = MID, within = .(parameter, ambiguity), type=3)
ezANOVA(data = dataSet, dv = shock, wid = MID, within = .(parameter, ambiguity))
ezPlot(data = dataSet, dv = shock, wid = MID, within = .(parameter, ambiguity))
ezPlot(data = dataSet, dv = shock, wid = MID, within = .(parameter, ambiguity), x=parameter)
ezPlot(data = dataSet, dv = shock, wid = MID, within = .(parameter, ambiguity), x=parameter, split = ambiguity)
dataSet <- melt.data.frame(dataSet, id=c("subNo", "parameter", "ambiguity"), measured=c(3,5,7), na.rm=F)
dataSet <- melt.data.frame(dataSet, id=c("MID", "parameter", "ambiguity"), measured=c(3,5,7), na.rm=F)
a = c(3,5,7)
a
dataSet  <-  read.csv("triplet.csv", header=T, sep=",", dec=".")
dataSet <- dataSet[!dataSet$parameter == 'ambiguityLevel',]
dataSet <- melt.data.frame(dataSet, id=c("MID", "parameter", "ambiguity"), measured=c("gain", "loss", "shock"))
dataSet  <-  read.csv("triplet.csv", header=T, sep=",", dec=".")
dataSet <- dataSet[!dataSet$parameter == 'ambiguityLevel',]
dataSet <- dataSet[,-c(1)]
dataSet <- dataSet[,-c(3,5,7)]
dataSet <- melt.data.frame(dataSet, id=c("MID", "parameter", "ambiguity"), measured=c("gain", "loss", "shock"))
ezANOVA(data = dataSet, dv = value, wid = MID, within = .(variable, parameter, ambiguity), type=3)
ezPlot(data = dataSet, dv = shock, wid = MID, within = .(parameter, ambiguity), x=parameter, split = variable, row=ambiguity)
ezPlot(data = dataSet, dv = shock, wid = MID, within = .(parameter, variable, ambiguity), x=parameter, split = variable, row=ambiguity)
ezPlot(data = dataSet, dv = value, wid = MID, within = .(parameter, variable, ambiguity), x=parameter, split = variable, row=ambiguity)
ezPlot(data = dataSet, dv = value, wid = MID, within = .(parameter, variable, ambiguity), x=parameter, split = variable)
ezPlot(data = dataSet, dv = value, wid = MID, within = .(parameter, variable), x=parameter, split = variable)
ezANOVA(data = dataSet, dv = value, wid = MID, within = .(variable, parameter, ambiguity), type=3)
ezPlot(data = dataSet, dv = value, wid = MID, within = .(parameter, variable, ambiguity), x=parameter, split = .(variable, ambiguity)
ezPlot(data = dataSet, dv = value, wid = MID, within = .(parameter, variable, ambiguity), x=parameter, split = .(variable, ambiguity))
ezPlot(data = dataSet, dv = value, wid = MID, within = .(parameter, variable, ambiguity), x=parameter, split = .(variable, ambiguity))
ambiguos = dataSet[dataSet$ambiguous=="ambi"]
ambiguos = dataSet[dataSet$ambiguous=="unambi"]
ambiguos = dataSet[dataSet$ambiguous=="ambi"]
unambiguos = dataSet[dataSet$ambiguous=="unambi"]
ambi = ezPlot(data = ambiguous, dv = value, wid = MID, within = .(parameter, variable), x=parameter, split = variable)
unambi = ezPlot(data = unambiguous, dv = value, wid = MID, within = .(parameter, variable), x=parameter, split = variable)
ambiguous = dataSet[dataSet$ambiguous=="ambi"]
unambiguous = dataSet[dataSet$ambiguous=="unambi"]
ambi = ezPlot(data = ambiguous, dv = value, wid = MID, within = .(parameter, variable), x=parameter, split = variable)
View(ambiguous)
View(ambiguous)
View(ambiguos)
ambiguous = dataSet[dataSet$ambiguous=="ambi",]
unambiguous = dataSet[dataSet$ambiguous=="unambi",]
ambi = ezPlot(data = ambiguous, dv = value, wid = MID, within = .(parameter, variable), x=parameter, split = variable)
unambi = ezPlot(data = unambiguous, dv = value, wid = MID, within = .(parameter, variable), x=parameter, split = variable)
ambi
ezPlot(data = ambiguous, dv = value, wid = MID, within = .(parameter, variable), x=parameter, split = variable)
View(ambiguos)
ambiguous = dataSet[dataSet$ambiguity=="ambi",]
unambiguous = dataSet[dataSet$ambiguity=="unambi",]
ezPlot(data = ambiguous, dv = value, wid = MID, within = .(parameter, variable), x=parameter, split = variable)
ezPlot(data = unambiguous, dv = value, wid = MID, within = .(parameter, variable), x=parameter, split = variable)
ezANOVA(data = dataSet, dv = value, wid = MID, within = .(variable, parameter, ambiguity), type=3)
(20/12)*5
